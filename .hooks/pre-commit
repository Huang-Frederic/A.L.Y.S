#!/bin/bash

declare -a FRAME=("-" "\\" "|" "/")
declare -x FRAME_INTERVAL=0.25

start() {
  local step=0

  tput civis -- invisible

  while [ "$step" -lt "${#CMDS[@]}" ]; do
    ${CMDS[$step]} & pid=$!

    while ps -p $pid &>/dev/null; do
      echo -ne "\\r[   ] ${STEPS[$step]} ..."

      for k in "${!FRAME[@]}"; do
        echo -ne "\\r[ ${FRAME[k]} ]"
        sleep $FRAME_INTERVAL
      done
    done

    echo -ne "\\r[ âœ” ] ${STEPS[$step]}\\n"
    step=$((step + 1))
  done

  tput cnorm -- normal
}

# Function to run a command if there are Python files in the git diff
run_if_py_files_changed() {
  local cmd=$1
  local step_desc=$2

  git diff --cached --name-only --diff-filter=ACMRTUXB | grep '\.py$' > /dev/null
  if [ $? -eq 0 ]; then
    CMDS+=("$cmd")
    STEPS+=("$step_desc")
  fi
}

# Commands and steps
CMDS=()
STEPS=()

run_if_py_files_changed "git diff --cached --name-only --diff-filter=ACMRTUXB | grep '\.py$' | xargs black" "Running Black formatting"
run_if_py_files_changed "git diff --cached --name-only --diff-filter=ACMRTUXB | grep '\.py$' | xargs isort" "Running Isort formatting"
run_if_py_files_changed "git diff --cached --name-only --diff-filter=ACMRTUXB | grep '\.py$' | xargs mypy" "Running Mypy type checking"

CMDS+=("git add -u")
STEPS+=("Adding changes to staging")

# Start the process
echo "Running formatting and type checking..."
start

exit 0
